{
	"info": {
		"_postman_id": "3fe1086c-833d-4658-aabe-a41a0feca2f5",
		"name": "InsecureRestAPI-Workflow",
		"description": "An example collection for security testing of IWA (Insecure Web Application) REST API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13859659",
		"_collection_link": "https://mfdemouk.postman.co/workspace/My-Workspace~c71e9c5c-d86a-44e4-8a78-9b4f1d507064/collection/13859659-3fe1086c-833d-4658-aabe-a41a0feca2f5?action=share&source=collection_link&creator=13859659"
	},
	"item": [
		{
			"name": "Site",
			"item": [
				{
					"name": "Sign In",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Access token returned\", function () {\r",
									"    var json = pm.response.json();\r",
									"    pm.expect(json.data.accessToken).exist;\r",
									"    console.log('Saving JWT access token in Globals: ' + json.data.accessToken)\r",
									"    pm.globals.set(\"ACCESS_TOKEN\", json.data.accessToken)\r",
									"});\r",
									"pm.test(\"Refresh token returned\", function () {\r",
									"    var json = pm.response.json();\r",
									"    pm.expect(json.data.refreshToken).exist;\r",
									"    console.log('Saving JWT refresh token in Globals: ' + json.data.refreshToken)\r",
									"    pm.globals.set(\"REFRESH_TOKEN\", json.data.refreshToken)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/site/sign-in",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"site",
								"sign-in"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email Available",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/site/email-already-exists/{{newEmail}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"site",
								"email-already-exists",
								"{{newEmail}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Test\",\r\n    \"lastName\":  \"User5\",\r\n    \"email\": \"{{newEmail}}\",\r\n    \"phoneNumber\": \"07700 123456\",\r\n    \"password\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/site/register-user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"site",
								"register-user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Subscribe User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Test\",\r\n    \"lastName\":  \"User1\",\r\n    \"email\": \"test1@localhost.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/site/subscribe-user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"site",
								"subscribe-user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Backup Newsletter DB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/site/backup-newsletter-db?filePath=/tmp/test_file",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"site",
								"backup-newsletter-db"
							],
							"query": [
								{
									"key": "filePath",
									"value": "/tmp/test_file"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"refreshToken\": \"{{REFRESH_TOKEN}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/site/refresh-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"site",
								"refresh-token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Sign Out",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accessToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4NWNmNzIzYWJkNTgyMTE1N2Q5MGEzYSIsInBlcm1pc3Npb25zIjpbImNyZWF0ZTp1c2VycyIsInJlYWQ6dXNlcnMiLCJ1cGRhdGU6dXNlcnMiLCJkZWxldGU6dXNlcnMiLCJjcmVhdGU6cHJvZHVjdHMiLCJyZWFkOnByb2R1Y3RzIiwidXBkYXRlOnByb2R1Y3RzIiwiZGVsZXRlOnByb2R1Y3RzIiwiY3JlYXRlOm1lc3NhZ2VzIiwicmVhZDptZXNzYWdlcyIsInVwZGF0ZTptZXNzYWdlcyIsImRlbGV0ZTptZXNzYWdlcyJdLCJlbWFpbCI6ImFkbWluQGxvY2FsaG9zdC5jb20iLCJpYXQiOjE3NTA5MjMyMzMsImV4cCI6MTc1MDkyNjgzM30.1w_J6soI2kkwPwusQCYsZ6rP28JQDvWKDpTBfvz_T5I\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/site/sign-out",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"site",
								"sign-out"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Get All Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Product id returned\", function () {\r",
									"    var json = pm.response.json();\r",
									"    pm.expect(json.data._id).exist;\r",
									"    console.log('Saving product id in collection: ' + json.data._id)\r",
									"    pm.collectionVariables.set('newProductId', json.data._id)\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"SWA000-A000-00000\",\r\n  \"name\": \"Test Product\",\r\n  \"summary\": \"Its summary of at least 10 characters xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"description\": \"Its detailed description of at least 40 characters xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"available\": true,\r\n  \"price\": 10.50,\r\n  \"inStock\": true,\r\n  \"timeToStock\": 10,\r\n  \"rating\": 3,\r\n  \"onSale\": true,\r\n  \"salePrice\": 20.0\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/products",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get New Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/{{newProductId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{newProductId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Product id returned\", function () {\r",
									"    var json = pm.response.json();\r",
									"    pm.expect(json.data._id).exist;\r",
									"    pm.expect(json.data._id).equals(pm.collectionVariables.get(\"newProductId\"))\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"code\": \"SWA000-A000-00002\",\r\n  \"name\": \"Updated Product\",\r\n  \"summary\": \"Its summary of at least 10 characters xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"description\": \"Its updated description of at least 40 characters xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\r\n  \"available\": true,\r\n  \"onSale\": true,\r\n  \"price\": 11.50,\r\n  \"inStock\": false,\r\n  \"timeToStock\": 10,\r\n  \"rating\": 3,\r\n  \"salePrice\": 8.50\r\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/{{newProductId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{newProductId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Updated Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Product id returned\", function () {\r",
									"    var json = pm.response.json();\r",
									"    pm.expect(json.data._id).exist;\r",
									"    pm.expect(json.data._id).equals(pm.collectionVariables.get(\"newProductId\"))\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/{{newProductId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{newProductId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product Image by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/{{newProductId}}/image",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{newProductId}}",
								"image"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product Image by Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/generic-product-1/image-by-name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"generic-product-1",
								"image-by-name"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/products/{{newProductId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"{{newProductId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Messages",
			"item": [
				{
					"name": "Get All Messages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/messages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"messages"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{ACCESS_TOKEN}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "email",
			"value": "admin@localhost.com",
			"type": "string"
		},
		{
			"key": "password",
			"value": "password",
			"type": "string"
		},
		{
			"key": "existingEmail",
			"value": "user1@localhost.com",
			"type": "string"
		},
		{
			"key": "newEmail",
			"value": "user5@localhost.com",
			"type": "string"
		},
		{
			"key": "newProductId",
			"value": "",
			"type": "string"
		},
		{
			"key": "newProductName",
			"value": "Test Product",
			"type": "string"
		}
	]
}